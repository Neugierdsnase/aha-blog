---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import type { BlogPostType } from "./blog/[...slug].astro";
import FormattedDate from "../components/FormattedDate.astro";


const posts: BlogPostType[] = (await getCollection("blog"))
  .filter(({ data }: BlogPostType) => !data.draft)
  .sort(
    (a: BlogPostType, b: BlogPostType) =>
      a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
  )
.reverse();
---

<!doctype html>
<html lang="de-AT">
  <BaseHead
    title="De Konstantini Pagina Domestica"
    description={SITE_DESCRIPTION}
  />

  <body>
    <main class="mx-auto max-w-11/12 desktop:max-w-3/4">
      <h1 class="text-8xl mt-[5svh]">{SITE_TITLE}</h1>
      <p
        class="text-6xl italic text-foreground-subtle border-b clear-descenders"
      >
        {SITE_DESCRIPTION}
      </p>
      <p
        class="hidden desktop:block text-right text-lg italic text-foreground-subtle mb-[3svh]"
      >
        Was gibt uns den schönsten Frieden, als frei am eig'nen Glück zu
        schmieden?
      </p>

      <section>
        <h2 class="text-5xl clear-descenders z-10 mb-2">Blog</h2>
        <dl>
          {
            posts.map(({ data, slug }: BlogPostType) => (
              <dt class="pt-4">
                <a href={"/" + slug} class="text-lg font-bold">{data.title}</a>
                  <FormattedDate
                    className="text-foreground-subtle text-xs"
                    date={data.pubDate}
                  />
</dt>
                  <dd>{data.description}</dd>
            ))
          }
        </dl>
      </section>

      <section>
        <h2 class="text-5xl mt-28 clear-descenders">Projekte</h2>
        <ul>
          <li class="mb-6 border-foreground border p-6">
            <a href="https://prompt-dress.com"
              ><h3 class="text-xl">Prompt Dress Browser Extension</h3></a
            >
            <p class="text-sm">
              Eine Browsererweiterung, zum lokalen abspeichern persönlicher KI <em
                >Prompts,
              </em> um sich das ständige neue <em>primen</em> der KI-Modelle durch
              manuelles Kopieren und Einfügen zu ersparen.
            </p>
          </li>
          <li class="mb-6 border-foreground border p-6">
            <a
              href="https://marketplace.visualstudio.com/items?itemName=KonstantinKovar.classnames-rainbow"
              ><h3 class="text-xl">
                ClassNames Rainbow VSCode Erweiterung <em>[deprecated]</em>
              </h3></a
            >
            <p class="text-sm">
              Eine Erweiterung für Visual Studio Code, die <code>class</code
              >-names durch Regenbogenoptik leichter identifizierbar macht, was
              vor allem für
              <a rel="noreferrer noopener" href="https://tailwindcss.com/"
                >Tailwind CSS</a
              > Nutzer hilfreich sein kann.
            </p>
          </li>
        </ul>
      </section>
    </main>
  </body>
</html>
