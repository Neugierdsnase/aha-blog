---
import BaseHead from "../components/BaseHead.astro";

type Props = {
  lang: "de" | "en";
  title: string;
  description: string;
};

const pages: { label: string; href: string }[] = [
  { label: "Über mich", href: "/about" },
  { label: "Jüngst gelesen", href: "/book" },
  { label: "Jüngst geschrieben", href: "/blog" },
];

const { lang, title, description } = Astro.props;
---

<!doctype html>
<html lang={lang}>
  <BaseHead title={title} description={description} />

  <body>
    <div id="body" class="grid grid-cols-12 gap-2 lg:gap-8 w-full">
      <header class="grid h-24 col-span-12 grid-cols-subgrid">
        <span
          class="font-decorative hidden desktop:flex col-span-4 justify-center items-center"
          >Konstantin Kovar</span
        >
        <button
          id="mobile-menu-toggle-button"
          class="desktop:hidden p-4 flex justify-center items-center col-start-6 col-span-2"
        >
          <svg class="size-[66px]">
            <path
              id="path1"
              d="M 3,3 L 63,3"
              stroke-linecap="round"
              class="stroke-foreground stroke-6"></path>
            <path
              id="path2"
              d="M 3,33 L 63,33"
              stroke-linecap="round"
              class="stroke-foreground stroke-6"></path>
            <path
              id="path3"
              d="M 3,63 L 63,63"
              stroke-linecap="round"
              class="stroke-foreground stroke-6"></path>
          </svg>
        </button>
        <nav
          class="col-span-12 desktop:col-start-5 grid desktop:grid-cols-subgrid desktop:col-span-4"
        >
          <ul
            class="col-span-12 bg-background flex-col desktop:flex-row flex justify-between items-center desktop:col-span-3"
          >
            {
              pages.map(({ label, href }) => (
                <li class="desktop:w-auto flex justify-center bg-background w-full items-center border-foreground-subtle border-b-[0.5px] z-10 h-0 desktop:h-auto overflow-clip desktop:overflow-ellipsis opacity-0 desktop:opacity-100 foldable">
                  <a href={href}>{label}</a>
                </li>
              ))
            }
          </ul>
        </nav>
        <ul
          class="col-span-12 flex justify-center items-center gap-2 desktop:col-span-3 h-0 border-foreground-subtle border-b-[0.5px] desktop:border-0 z-10 bg-background desktop:h-auto overflow-clip desktop:overflow-ellipsis opacity-0 desktop:opacity-100 foldable"
        >
          <li>RSS</li>
          <li>E-Mail</li>
        </ul>
      </header>
      <aside><slot name="aside" /></aside>
      <main class="col-span-12 desktop:col-start-4 desktop:col-span-8">
        <slot />
      </main>
    </div>
  </body>

  <script>
    import { stagger, createTimeline } from "animejs";

    const foldables = document.querySelectorAll(".foldable");
    const amountOfFoldables = foldables.length;

    const timeline = createTimeline({
      alternate: true,
      autoplay: false,
      playbackEase: "out",
    });

    timeline.add(
      foldables,
      {
        translateY: { from: -stagger(24), to: 0 },
        opacity: 1,
        height: "48px",
        delay: stagger(500 / amountOfFoldables),
        duration: 500 / amountOfFoldables,
      },
      70,
    );

    timeline.add(
      "#path3",
      {
        d: "M 33,3 L 33,63",
        strokeWidth: 3,
        duration: 500,
      },
      0,
    );

    timeline.add(
      "#path1",
      {
        d: "M 33,63 L 3,33",
        strokeWidth: 3,
        duration: 500,
      },
      0,
    );

    timeline.add(
      "#path2",
      {
        d: "M 33,63 L 63,33",
        strokeWidth: 3,
        duration: 500,
      },
      0,
    );

    timeline.add(
      "button",
      {
        rotate: "-180deg",
        duration: 400,
        ease: "out",
      },
      200,
    );

    let isMobileMenuOpen = false;

    document
      .querySelector("#mobile-menu-toggle-button")
      ?.addEventListener("click", () => {
        if (isMobileMenuOpen) {
          timeline.reverse();
        } else {
          timeline.play();
        }
        isMobileMenuOpen = !isMobileMenuOpen;
      });
  </script>

  <script
    is:inline
    data-goatcounter="https://konstantin.goatcounter.com/count"
    async
    src="//gc.zgo.at/count.js"></script>
</html>
